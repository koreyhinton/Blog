#+TITLE: Do Programmers Make For Better Bloggers?
#+DESCRIPTION: A rare non iOS dev post
#+KEYWORDS: programmers, bloggers, blog, korey hinton
#+OPTIONS: timestamp:nil
#+DATE: Sun, 15 Feb 2015

#+INCLUDE: header.org

* Disclaimer
  As any controversial post should have, here are some disclaimers:

  1. Professional writers already have the edge, so we are going to assume a level playing field in terms of writing experience.
  2. I am in no way suggesting a non-programmer to learn programming before blogging.
  3. I'm a programmer, so I am naturally biased towards programmers having the edge and I really couldn't fully understand what it would be like to blog and not be a programmer.
 
* Expertise
  Assuming that the programmer is blogging about programming then he/she is already blogging about something they are likely getting paid professionally to work as a programmer. This gives a lot of advantage over someone who is trying to make a living solely off of blogging. This only applies if the non-programmer doesn't have expert knowledge in a given topic.

* Alterior Motive
  Most bloggers have $ as the alterior motive for creating a blog. Most developer blogs don't have this problem. Developer blogs provide important information and documentation that other programmers can benefit from as well as the programmer him/herself. I've seen time and time again programmer blogs where I can't find any marketing, ads, or memberships. Readers can freely read the blog without feeling like they are constantly being marketed to. A developer can establish expert status through blogging their knowledge and that might help them in their future career since their portfolio site/blog will grow its google pagerank as more great content is added.. This just means that they are more determined to bring better content to the reader. 

*+1 to the programmer*

* Testing
  Since programmers constantly test the software they build it is a no-brainer to do the same thing with any new content added to their blog. Also to non-programmers it doesn't make much sense to subscribe to their own mailing list or rss feed since they are the ones publishing the content. Will the programmer subscribe? Of course! They want to know first of all if it works and they want to know if it ever doesn't work. 

*+1 to the programmer*

* Simplicity over Complexity
  While it is a software developer's job to manage complexity, it is also pretty common for programmers to overthink and overdo things. When I initially created my blog I had a ton of categories: Server Administration, iOS, JavaScript, Social Networking, etc. I was pretty much all over the map. I also see a lot of developer blogs that post content that isn't relevant to software development. What annoys me the most are politically opinionated posts. Many programmers may want their blog to be about everything. They also might try to use every blogging tool imaginable or break out their own tool. 

*+1 to the non-programmer*

* Time
  Programmers probably already have a passion for programming over blogging. Many are programming outside of their work hours and blogging is added as an additional thing to do on top of all that. This gives less time for blogging. 

*+1 to the non-programmer*

* Marketing
  This one is a toss up. Some programmers hate social networking. The ones that do might have an advantage since they will be more likely to use advanced social networking features and also are more likely to find ways to automate their marketing updates. Also, since programmers have seen a lot of the business and marketing side of building software they are probably more likely to know what marketing and business decisions are good. Since programmers might want to spend more time programming than publishing and marketing their content they could also have a disadvantage here.

* Design
  While programmers are not designers, if they have dones any user interface work then they have a decent idea of what looks nice and what doesn't. Also, developers tend to read other development blogs and so from this they already have an idea of what features are nice and what looks good and what they don't like on the vast number of blogs they follow.

*+1 to the programmer*

* Costs
  Since programmers probably have the knowledge and skills to build their own blogging or CMS system, they really don't have many limits as to what they can do. Unfortunately non-programmers will have to pay for advanced customizations.

*+1 to the programmer*


* Knowing how to read code
  While this seems like a programmer-loaded blogging aspect to look at it really is important. Non-programmers that just copy and paste widgets are stuck with whatever customizations the widget builder allows. Programmers with web experience can customize the heck out of anything.

*+1 to the programmer*

* Maintenance and Upgrades
  Non-programmers who use Wordpress probably have the worse-case of upgrade nightmares. They rely on Wordpress plugins that might not be up-to-date with the latest Wordpress version. When things break they are at the mercy of the product's technical support.

*+1 to the programmer*

* Targeting a niche
  Most software companies have a niche they target. Also, blogging about programming is already a targeted niche and most developer blogs target it even further to a specific programming language. 

*+1 to the programmer*

* Customizations
  Programmers have limitless customization opportunities. They can write custom scripts to migrate their data to new systems and if they use Wordpress they can customize their own theme. They can even create their own blogging software.

*+1 to the programmer*

* Earnings
  This one is also a tossup. Developers might not be getting any earnings at all if their blogging focus isn't income while non-developers might easily fall for get rich quick blogging techniques that don't help them to end up with a loyal customer base. A development blog will likely take a long time to earn a decent amount of money while a blog that hits a larger niche could make money more quickly but the developer blog is likely over time to have subscribers who are glued to every new blog post and will be willing to fork out the cash for any book you publish and sell.

* Research
  Another toss up. Programmers are really good at research but bloggers will probably spend more time analyzing their statistics.

* Interesting Content
  10 reasons why __ is more interesting to the general population than how to configure an Apache server.

*+1 to the non-programmer*

* Writing Content People Want
  If we consider /people/ generally then programming isn't what the general population wants to read. Also, programming blogs tend to be more technical and are used for the purpose of applying it to your own programming projects and usually aren't meant to be a casual read just for fun.

  *+1 to the non-programmer*.

* Quantity of Content
  While there are non-programmers that can publish a lot of content, they could easily be beat by a programmer that is serious about publishing content. Just about anything a programmer does in his day job could be published as content and someone out there would find it useful. Also hackers that are experts in Emacs could easily take their Org notes and documentation and easily publish them out into a blog or wiki not to mention the serious advantages they already have for typing the content in Emacs.

*+1 to the programmer*

* The Results
  So here are the results:

  - Programmer: 9
  - Non-Programmer: 4

  The programmer wins in terms of winning the most aspects of blogging covered in this evaluation.

* Conclusion
  
  On any technical aspect the programmer has the advantage. Since we are looking at so many aspects of blogging the programmer of course wins. Programmers are immersed into so many different aspects of software development that there is a lot of overlap with blogging. However if you value certain aspects of blogging over others the non-programmer could be the winner. If content quality holds a high weight then the non-programmer could have the advantage but considering how pagerankings work quantity of content is also a huge aspect that can't go ignored. Many blogging studies have shown that pushing more blog posts will greatly increase the traffic to your site. Anyway, in my mind the programmer has the advantage and I would hate the restrictions of blogging without being able to do all the advanced customizations and automation programmers are capable of. Maybe that's why I'm a programmer more than a blogger.
